package com.hepl.backendapi.utils.config.WebSocketConfig;

import org.springframework.http.server.ServerHttpRequest;
import org.springframework.stereotype.Component;
import org.springframework.web.socket.WebSocketHandler;
import org.springframework.web.socket.server.support.DefaultHandshakeHandler;

import java.security.Principal;
import java.util.Map;

/**
 * Ce gestionnaire extrait l'ID utilisateur depuis les attributs de session (d√©finis par l‚Äôintercepteur),
 * et l'utilise pour cr√©er un objet `Principal`. Cet objet repr√©sente l'utilisateur connect√©,
 * et est utilis√© par Spring pour router les messages priv√©s vers ce client. Ainsi,
 * chaque utilisateur est associ√© √† un nom unique (ici : son accountId), et seuls
 * les messages lui √©tant destin√©s lui seront d√©livr√©s.
 */
@Component
public class HandshakeHandler extends DefaultHandshakeHandler {
    @Override
    protected Principal determineUser(ServerHttpRequest request, WebSocketHandler wsHandler,
                                      Map<String, Object> attributes) {
        String accountId = (String) attributes.get("accountId");
        String role = (String) attributes.get("role");
        logger.info("üë§ Nouvel utilisateur connect√© avec ID: {"+ accountId + "}");

        return () -> accountId + " : " + role ;
    }
}
